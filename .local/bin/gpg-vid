#!/usr/bin/sh
# @author nate zhou
# @since 2024,2025
# decrypt the .gpg file and pipe to mpv, without writing to the disk
# the video file has to be streamable, triming a mp4 file with ffmpeg could make it non-streamable
# fix it by copy the movflags of the orgianl file
# ffmpeg -i output.mp4 -c copy -movflags faststart new_output.mp4

source $HOME/.local/bin/wmenu-color 2>/dev/null

usage() {
    echo -e "usage:\t$(basename "$0") video.*.gpg\n\twmenu as passphrase prompt to temporarily view the encrypted files"
}

# print help menu if no arguments is provided
if [ $# -eq 0 ]; then
    usage
    exit 1
fi

# use wmenu as passphrase prompt
gpg_passphrase=$(echo "" | wmenu-color -P -p "[$(basename $0)] passphrase: ")

# don't do anything if exiting wmenu without any input
if  [ -z "$gpg_passphrase" ]; then
    exit 1
fi

    echo "$gpg_passphrase" | gpg --batch --passphrase-fd 0 -d "$1" | mpv - --loop --no-resume-playback

# clean cached passphrase
gpg-connect-agent reloadagent /bye
