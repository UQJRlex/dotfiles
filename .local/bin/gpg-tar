#!/usr/bin/sh
# @author nate zhou
# @since 2024,2025
# decrypt the .gpg file and pipe to tar
# if in wayland, using wmenu as input box
# after reading the untar'ed files, remember to `shred -u <files>`

CIPHER_ALGO=aes256
usage() {
    echo -e "usage:\t$(basename "$0") file\n\tmake an encrypted tarball with symmetric cipher $CIPHER_ALGO using wmenu for input"
}

# print help menu if no arguments is provided
if [ "$#" -eq 0 ]; then
    usage
    exit 1
fi

if [ "$XDG_SESSION_TYPE" = "tty" ]; then
    tar -cvf - "$1" | gpg -c --cipher-algo aes-256 --output "$1".tar.gpg
    exit 0
fi

# use wmenu to input passphrase
gpg_passphrase1=$(echo "" | wmenu -P -f "SourceCodePro medium 13" -p "[$(basename $0)] passphrase: " -S 6f3f89 -s ffffff -M 6f3f89 -m ffffff)

# don't do anything if exiting wmenu without any input
if  [ -z "$gpg_passphrase1" ]; then
    notify-send -r 1284 -u low "$(basename $0):" "Aborted for empty passphrase"
    exit 1
fi
gpg_passphrase2=$(echo "" | wmenu -P -f "SourceCodePro medium 13" -p "[$(basename $0)] passphrase again " -S 6f3f89 -s ffffff -M 6f3f89 -m ffffff)
if [ "$gpg_passphrase1" != "$gpg_passphrase2" ]; then
    notify-send -r 1284 -u low "inputs are not identical!"
    exit 1
fi

# tar -cvf - sends the output to the standard output intead of writing to a file on disk
#tar --pinentry-mode loopback -cvf - $1 | gpg -c --cipher-algo aes-256 --output $1.tar.gpg
tar -cvf - "$1" | gpg -c --cipher-algo "$CIPHER_ALGO" --output "$1".tar.gpg --passphrase "$gpg_passphrase1"

# clear passphrase cache in memory
gpg-connect-agent reloadagent /bye

[ "$XDG_SESSION_TYPE" != "tty" ] && notify-send -u low -r 1099 "$(basename $0)" "$msg"
