#!/usr/bin/env bash
# @author nate zhou
# @since 2025
# generate keybindings for bash aliases and ranger

set +x
author="nate zhou"
year="2025"

TELEPORT_CONF="$HOME/.config/bash/teleport.conf"
TELEPORT_BASH="$HOME/.config/bash/teleport.sh"
TELEPORT_RANGER="$HOME/.config/ranger/teleport.conf"

usage() {
cat << _EOF_
[$(basename $0)] usage:
    -h,--help       print this manual
    -b,--bash       generate teleport.sh for bash
    -r,--ranger     generate teleport.conf for ranger
    -a,--all        generate for all (this is the default behavior)
_EOF_
}

clear_up() {
    printf "# This file is auto generated by teleport-genesis\\n# @author $author\\n# @since $year\\n\\n"
}

gen_bash() {
    echo "clearing old bash bindings..."
    clear_up > "$TELEPORT_BASH"

    for i in $(grep '^[^#]' "$TELEPORT_CONF" | tr ' ' '\n'); do
        parsed_key="$(echo $i | cut -d'=' -f1)"
        parsed_dir="$(echo $i | cut -d'"' -f2)"
        printf "alias $parsed_key=\"$parsed_dir\"\\n" >> "$TELEPORT_BASH"
    done

    echo "teleport.sh generated for bash"
}

gen_ranger() {
    echo "clearing old bash bindings..."
    clear_up > "$TELEPORT_RANGER"

    for i in $(grep '^[^#]' "$TELEPORT_CONF" | tr ' ' '\n'); do
        parsed_key="$(echo $i | cut -d'=' -f1)"
        parsed_key_lower="${parsed_key,}"
        parsed_dir="$(echo $i | cut -d'"' -f2)"
        printf "map $parsed_key_lower cd $parsed_dir\\nmap $parsed_key chain tab_new; cd $parsed_dir\\n" >> "$TELEPORT_RANGER"
    done

    echo "teleport.conf generated for ranger"
}

gen_all() {
    gen_bash
    gen_ranger
}

if [ ! -f "$TELEPORT_CONF" ]; then
    cat << _EOF_
error: $TELEPORT_CONF doesn't exist
create it in the format of:
    Bh="~/doc/heart"
_EOF_
    exit 1
fi

if [ "$#" -eq 0 ]; then
    gen_all
    exit 0
fi

while [ -n "$1" ]; do
    case "$1" in
        -h | --help)
            usage
            exit 0
            ;;
        -a | --all)
            gen_all
            exit 0
            ;;
        -b | --bash)
            gen_bash
            ;;
        -r | --ranger)
            gen_ranger
            ;;
        *)
            echo "invalid option"
            usage
            exit 1
    esac
    shift
done
