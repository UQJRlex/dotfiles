#!/usr/bin/env bash
# @author nate zhou
# @since 2023,2024,2025
# updw, update dunst weather
# @depends: libnotify, dunst, dw

# use notification software like dunst to fetch weather info to a local cache which can then be dispalyed by my another script dw
# running with dmenu/wmenu is recommended

WTTR_CACHE="$HOME/.cache/wttr"
WTTR_CACHE2="$HOME/.cache/wttr2"

if [ -f "$HOME/.cache/city" ]; then

    CITY="$(cat $HOME/.cache/city)"

    if [ -z "$CITY" ]; then
        msg="~/.cache/city is empty, write the city name to it"
        notify-send -u low -r 21 "$msg"
        echo $msg
    else
        wttr_temp="$(curl wttr.in/$CITY?format=1)"
        wttr_temp2="$(wttr)"

        # check if curl returns a temperature
        if [[ "$wttr_temp" == *°C* ]] ; then
            # remove potential repeating spaces
            echo "$wttr_temp" | sed 's/[[:space:]]\+/ /g' > "$WTTR_CACHE"
            [[ "$wttr_temp" == *°C* ]] && echo "$wttr_temp2" > "$WTTR_CACHE2"
            # adding update timestamp
            #echo "($(date +'%b-%d %a %H:%M'))" >> $HOME/.cache/wttr
            msg="updw done"
            notify-send -u low -r 22 "$msg"
            echo $msg
            pkill -SIGRTMIN+7 i3blocks
        else
            msg="updw failed, check network ?"
            notify-send -u low -r 21 "$msg"
            echo $msg
        fi
    fi

else
    msg="~/.cache/city does not exist, write the city name to it"
    notify-send -u low -r 21 "$msg"
    echo $msg
fi
