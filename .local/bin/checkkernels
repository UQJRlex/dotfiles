#!/usr/bin/sh
# @author nate zhou
# @since 2024,2025
# checkkernels
# Compare running kernel with installed kernel package versions

KERNELS="linux linux-lts linux-zen"
kernel_running=$(uname -r | sed 's/-lts//; s/-arch/\.arch/; s/-zen//')
kernel_installed=$(pacman -Q --color never $KERNELS 2> /dev/null | awk '{print $2}') # no quotes on $KERNELS

usage() {
cat << _EOF_
USAGE
        $(basename "$0") [OPTIONS]
OPTIONS
        -h  print this help info
        -v  verbose, print kernel versions
_EOF_
}

print_kernels() {
cat << _EOF_
VERSION
        running:   $kernel_running
        installed: $kernel_installed
_EOF_
}

# parse options
while getopts "hv" opt; do
    case "${opt}" in
        h)
            usage
            exit 1
            ;;
        v)
            print_kernels
            ;;
        \?)
            echo "invalid options, see help with -h"
            exit 0
            ;;
    esac
done

if [ -z "$(echo "$kernel_installed" | grep "$kernel_running")" ]; then
    msg="kernel is outdated, a reboot is required"
else
    msg="kernel is up-to-date"
fi

echo "$msg"
# if in graphical environment, send desktop notification
if [ "$XDG_SESSION_TYPE" != "tty" ]; then
    notify-send -u low -r 388 "checkkernels" "$msg"
fi
