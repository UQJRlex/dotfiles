#!/usr/bin/sh
# @author nate zhou
# @since 2025
# @depends wireplumber
# change volume of pipewire sinks/sources and track status.

# status is saved to XDG_CACHE_DIR for reboot consistency

wobfifo="${XDG_RUNTIME_DIR}/wob.fifo"

[ "$1" = "sink" ] && target="@DEFAULT_AUDIO_SINK@"
[ "$1" = "source" ] && target="@DEFAULT_AUDIO_SOURCE@"

blocks_reload() {
    [ "$1" = "sink"  ] && kill -36 "$(cat ${XDG_RUNTIME_DIR}/damblocks.pid)";
    [ "$1" = "source" ] && kill -37 "$(cat ${XDG_RUNTIME_DIR}/damblocks.pid)";
    # ../../etc/udev/rules.d/99-damblocks-bluetooth.rules
    [ "$1" = "all" ] && kill -36 "$(cat ${XDG_RUNTIME_DIR}/damblocks.pid)" && kill -37 "$(cat ${XDG_RUNTIME_DIR}/damblocks.pid)";
}

volume_minus() {
    wpctl set-volume "$target" 1%-
    local status=$(wpctl get-volume "$target")
    echo "$status" | sed 's/[^0-9]//g; s/^0//' | tee "$wobfifo" "${XDG_CACHE_HOME}/audio-${target}.level"
    echo "$status" | grep -i 'MUTED' | tee "$wobfifo" "${XDG_CACHE_HOME}/audio-${target}.muted"
    blocks_reload "$1"
}

volume_plus() {
    wpctl set-volume "$target" 1%+
    local status=$(wpctl get-volume "$target")
    echo "$status" | sed 's/[^0-9]//g; s/^0//' | tee "$wobfifo" "${XDG_CACHE_HOME}/audio-${target}.level"
    echo "$status" | grep -i 'MUTED' | tee "$wobfifo" "${XDG_CACHE_HOME}/audio-${target}.muted"
    blocks_reload "$1"
}

volume_mute() {
    wpctl set-mute "$target" toggle
    local status=$(wpctl get-volume "$target")
    echo "$status" | sed 's/[^0-9]//g; s/^0//' | tee "$wobfifo" "${XDG_CACHE_HOME}/audio-${target}.level"
    echo "$status" | grep -i 'MUTED' | tee "$wobfifo" "${XDG_CACHE_HOME}/audio-${target}.muted"
    blocks_reload "$1"
}

case "$2" in
    --minus)
        volume_minus "$1"
        ;;
    --plus)
        volume_plus "$1"
        ;;
    --mute)
        volume_mute "$1"
        ;;
    reload)
        blocks_reload "$1"
        ;;
    *)
        echo "Usage: audio <sink|source> <--minus | --plus | --mute | reload>"
        ;;
esac
